name: Build Poco F1 GKI Kernel with KernelSU-Next

on:
  workflow_dispatch:

env:
  TZ: America/New_York
  GKI_CONFIG: build.config.gki.aarch64  # Change to build.config.gki-debug.aarch64 for debug build

jobs:
  build:
    name: Build GKI Kernel by ${{ github.actor }}
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4

    - name: Set swap to 10G
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10

    - name: Setup build kernel environment
      run: |
        set -e
        echo "BUILD_TIME=$(TZ=America/New_York date '+%y%m%d')" >> $GITHUB_ENV
        echo "BUILD_TIME_1=$(TZ=America/New_York date '+%Y-%m-%d')" >> $GITHUB_ENV
        sudo apt-get update
        sudo apt-get install -y git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib bzip2 libbz2-dev liblz4-tool make squashfs-tools dpkg-dev libssl-dev python3 bc libc6-dev-i386 libncurses5-dev

    - name: Download kernel source
      run: |
        cd $GITHUB_WORKSPACE
        mkdir -p kernel_workspace
        cd kernel_workspace
        git clone --recursive https://github.com/duckyduckG/android_kernel_xiaomi_sdm845_419.git android-kernel --depth=1
        cd android-kernel
        # Skip mi845 Kconfig if present
        if [ -f "techpack/Kconfig" ]; then
          sed -i '/techpack\/mi845\/Kconfig/d' techpack/Kconfig
        fi

    - name: Setup KernelSU Next
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        rm -rf KernelSU-Next
        curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -
        if [ -d "KernelSU-Next" ]; then
          cd KernelSU-Next
          KSU_VERSION=$(expr $(git rev-list --count HEAD) + 10200)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
        else
          echo "KernelSU-Next not found!"
          exit 1
        fi

    - name: Build GKI kernel
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        if [ ! -f "build/$GKI_CONFIG" ]; then
          echo "ERROR: GKI config file $GKI_CONFIG not found!"
          exit 1
        fi
        chmod +x build/build.sh
        BUILD_CONFIG=$GKI_CONFIG ./build/build.sh 2>&1 | tee build.log

    - name: Check kernel output
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        echo "Searching for kernel image..."
        find . -name "Image*" -type f
        IMG_PATH=$(find . -name "Image.gz-dtb" -type f | head -n 1)
        if [ -z "$IMG_PATH" ]; then
          IMG_PATH=$(find . -name "Image.gz" -type f | head -n 1)
        fi
        if [ -z "$IMG_PATH" ]; then
          IMG_PATH=$(find . -name "Image" -type f | head -n 1)
        fi
        if [ -z "$IMG_PATH" ]; then
          echo "ERROR: No kernel image found!"
          exit 1
        fi
        echo "IMG_PATH=$IMG_PATH" >> $GITHUB_ENV

    - name: Make AnyKernel3
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone https://github.com/osm0sis/AnyKernel3 --depth=1
        cd AnyKernel3
        cat > anykernel.sh << 'EOF'
        # AnyKernel3 Ramdisk Mod Script
        properties() { '
        kernel.string=Poco F1 KernelSU-Next GKI Kernel
        do.devicecheck=1
        do.modules=0
        do.systemless=1
        do.cleanup=1
        do.cleanuponabort=0
        device.name1=beryllium
        device.name2=Poco F1
        device.name3=POCO F1
        '; }
        block=/dev/block/bootdevice/by-name/boot;
        is_slot_device=0;
        ramdisk_compression=auto;
        patch_vbmeta_flag=auto;
        . tools/ak3-core.sh;
        dump_boot;
        write_boot;
        EOF
        cp ${{ env.IMG_PATH }} ./
        rm -rf .git* README.md

    - name: Zip AnyKernel3 package
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/AnyKernel3
        zip -r $GITHUB_WORKSPACE/AK3-PocoF1-GKI-KernelSU-Next_${{ env.KSUVER }}-${{ env.BUILD_TIME }}.zip ./*

    - name: Upload kernel image
      uses: actions/upload-artifact@v4
      with:
        name: Image-PocoF1-GKI-KernelSU-Next_${{ env.KSUVER }}
        path: ${{ env.IMG_PATH }}

    - name: Upload AnyKernel3 zip
      uses: actions/upload-artifact@v4
      with:
        name: AK3-PocoF1-GKI-KernelSU-Next_${{ env.KSUVER }}-${{ env.BUILD_TIME }}
        path: AK3-PocoF1-GKI-KernelSU-Next_${{ env.KSUVER }}-${{ env.BUILD_TIME }}.zip

    - name: Upload build log
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: Build-Log-${{ env.BUILD_TIME }}
        path: kernel_workspace/android-kernel/build.log
