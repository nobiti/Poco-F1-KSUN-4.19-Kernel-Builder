name: Build Poco F1 Kernel 4.19 with KernelSU-Next (Auto Defconfig)

on:
  workflow_dispatch:

env:
  TZ: America/New_York

jobs:
  build:
    name: Build Kernel by ${{ github.actor }}
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4

    - name: Set swap to 10G
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10

    - name: Setup build kernel environment
      run: |
        set -e
        echo "BUILD_TIME=$(TZ=America/New_York date "+%y%m%d")" >> $GITHUB_ENV
        echo "BUILD_TIME_1=$(TZ=America/New_York date "+%Y-%m-%d")" >> $GITHUB_ENV
        sudo apt-get update
        sudo apt-get install git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev \
          g++-multilib bzip2 libbz2-dev liblz4-tool make squashfs-tools dpkg-dev libssl-dev python3 bc \
          libc6-dev-i386 libncurses5-dev

    - name: Download Clang & GCC
      run: |
        cd $GITHUB_WORKSPACE
        mkdir -p kernel_workspace && cd kernel_workspace
        git clone https://gitlab.com/crdroidandroid/android_prebuilts_clang_host_linux-x86_clang-r487747c clang-aosp
        git clone https://gitlab.com/crdroidandroid/android_prebuilts_gcc_linux-x86_aarch64_aarch64-linux-android-4.9 gcc-64
        git clone https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_arm_arm-linux-androideabi-4.9 gcc-32

    - name: Download Poco F1 kernel source & fix Kconfig
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone --recursive https://github.com/duckyduckG/android_kernel_xiaomi_sdm845_419.git android-kernel --depth=1
        cd android-kernel
        # Skip mi845 Kconfig if not present
        if grep -q 'techpack/mi845/Kconfig' techpack/Kconfig && [ ! -f techpack/mi845/Kconfig ]; then
          echo "Removing techpack/mi845/Kconfig reference..."
          sed -i '/techpack\/mi845\/Kconfig/d' techpack/Kconfig
        fi
        cd scripts && sed -i 's/ -dirty//g' setlocalversion

    - name: Setup KernelSU Next
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        rm -rf KernelSU-Next
        curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -
        cd KernelSU-Next
        KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) + 10200)
        echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV

    - name: Auto-detect defconfig
      id: defconfig
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel/arch/arm64/configs
        if [ -f beryllium_defconfig ]; then
          echo "DEFCONFIG=beryllium_defconfig" >> $GITHUB_ENV
        elif [ -f sdm845-perf_defconfig ]; then
          echo "DEFCONFIG=sdm845-perf_defconfig" >> $GITHUB_ENV
        else
          FIRST_DEFCONFIG=$(ls *.defconfig | head -n 1)
          echo "No standard defconfig found! Using $FIRST_DEFCONFIG"
          echo "DEFCONFIG=$FIRST_DEFCONFIG" >> $GITHUB_ENV
        fi

    - name: Build kernel
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        export ARCH=arm64
        export SUBARCH=arm
        export PATH=$GITHUB_WORKSPACE/kernel_workspace/clang-aosp/bin:$GITHUB_WORKSPACE/kernel_workspace/gcc-64/bin:$GITHUB_WORKSPACE/kernel_workspace/gcc-32/bin:$PATH
        export KBUILD_BUILD_HOST=Github-Action
        export KBUILD_BUILD_USER=$(echo ${{ github.actor }} | tr A-Z a-z)
        BA_CMD="CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-android- CROSS_COMPILE_ARM32=arm-linux-androideabi-"
        EX_CMD="LD=ld.lld LLVM=1 LLVM_IAS=1"

        make O=out ARCH=arm64 CC=clang $BA_CMD $EX_CMD ${{ env.DEFCONFIG }}
        make -j$(nproc --all) O=out ARCH=arm64 CC=clang $BA_CMD $EX_CMD 2>&1 | tee build.log

    - name: Upload build log
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: Build-Log-${{ env.BUILD_TIME }}
        path: kernel_workspace/android-kernel/build.log
